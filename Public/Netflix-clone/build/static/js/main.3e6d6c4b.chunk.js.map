{"version":3,"sources":["axios.js","Row.js","requests.js","Nav.js","Banner.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","APIKEY","requests","fetchTrending","fetchNetflixOrginals","fetchTopRated","fetchTActionMovies","fetchTComedyMovies","fetchTHorrorMovies","fetchTRomanceMovies","fetchTDocumentaries","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e6d6c4b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const APIKEY = \"3f3690549436cb93b84381cd5d606323\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${APIKEY}&language=en-US`,\r\n  fetchNetflixOrginals: `/discover/tv?api_key=${APIKEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${APIKEY}&language=en-US`,\r\n  fetchTActionMovies: `/discover/movie?api_key=${APIKEY}&with_genres=28`,\r\n  fetchTComedyMovies: `/discover/movie?api_key=${APIKEY}&with_genres=35`,\r\n  fetchTHorrorMovies: `/discover/movie?api_key=${APIKEY}&with_genres=27`,\r\n  fetchTRomanceMovies: `/discover/movie?api_key=${APIKEY}&with_genres=10749`,\r\n  fetchTDocumentaries: `/discover/movie?api_key=${APIKEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <img\r\n        className=\"nav_logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n        alt=\"Reload\"\r\n      />\r\n      <img\r\n        className=\"nav_avatar\"\r\n        src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n        alt=\"Reload\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOrginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\r\n            \"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\"\r\n        )`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1>{movie?.title || movie?.name || movie?.original_name}</h1>\r\n        <div className=\"banner_button\">Play</div>\r\n        <div className=\"banner_button\">My List</div>\r\n        <h1 className=\"banner_description\">{truncate(movie?.overview, 150)}</h1>\r\n      </div>\r\n      <div className=\"banner--fadeBottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport Nav from \"./Nav\";\nimport Banner from \"./Banner\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORGINALS\"\n        fetchUrl={requests.fetchNetflixOrginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchTActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchTComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchTHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchTRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchTDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}